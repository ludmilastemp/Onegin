#include <stdio.h>

#include "STL_sorts.h"
#include "STL_file_open.h"
#include "compare.h"
#include "fprint.h"

int main()
{
    //char p1[] = "abcdefghijklmnop";  //16
    //char p2[] = "defghijklmnopqrs";
    int p1[] = {10, 8, 3};
    int p2[] = {9, 1, -19};
    int len = 3 * sizeof (int);
    long long n1;
    int n2;
    short n3;
    char n4;
    
    for (int i = 0; i < len / sizeof (int); ++i) printf

    printf ("%s\n", p1);
    printf ("%s\n", p2);

    int i = 0;
    for (; len >= 8; len -= 8, i++)
    {
        n1 = *(long long*)((char*)p1 + i * 8);
        *(long long*)((char*)p1 + i * 8) = *(long long*)((char*)p2 + i * 8);
        *(long long*)((char*)p2 + i * 8) = n1;
    }
    i *= 8;

    printf ("\nafter long: \n");
    printf ("%s\n", p1);
    printf ("%s\n", p2);

    if (len >= 4)
    {
        n2 = *(int*)((char*)p1 + i);
        *(int*)((char*)p1 + i) = *(int*)((char*)p2 + i);
        *(int*)((char*)p2 + i) = n2;
        len -= 4;
        i += 4;
    }

    printf ("\nafter int: \n");
    printf ("%s\n", p1);
    printf ("%s\n", p2);

    if (len >= 2)
    {
        n3 = *(short*)((char*)p1 + i);
        *(short*)((char*)p1 + i) = *(short*)((char*)p2 + i);
        *(short*)((char*)p2 + i) = n3;
        len -= 2;
        i += 2;
    }

    printf ("\nafter short: \n");
    printf ("%s\n", p1);
    printf ("%s\n", p2);

    if (len >= 1)
    {
        n4 = *(char*)((char*)p1 + i);
        *(char*)((char*)p1 + i) = *(char*)((char*)p2 + i);
        *(char*)((char*)p2 + i) = n4;
        len -= 1;
        i += 1;
    }

    printf ("\nafter char: \n");
    printf ("%s\n", p1);
    printf ("%s\n", p2);



    return 0;

    /*

    File file = { 0 };

    file.strings = STL_SplitFileIntoLines (&file, "onegin.txt");
    if (file.strings == nullptr)
    {
        return EXIT_FAILURE;
    }

    FILE* fp = fopen ("onegin2.0.txt", "w");
    assert (fp);

    qsort (file.strings, file.nLines, sizeof (String), Compare);
    FPrintText (fp, file.strings, file.nLines);

    BubbleSort (file.strings, file.nLines, sizeof (String), CompareFromEnd);
    FPrintText (fp, file.strings, file.nLines);

    fprintf (fp, "%s", file.text);

    free (file.text);
    free (file.strings);

    return 0; */
}
